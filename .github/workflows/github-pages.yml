name: GitHub Pages

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fix permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: src/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write

    environment:
      name: ${{ github.event_name == 'push' && github.ref_name == 'main' && 'production' || 'preview' }}
      url: ${{ steps.deployment.outputs.page_url }}

    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: ${{ !(github.event_name == 'push' && github.ref_name == 'main') }}

  comment-on-pr:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      pull-requests: write

    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Comment on PR
        uses: actions/github-script@v4
        env:
          PR_COMMENT: |
            # âœ… GitHub Pages Preview Ready

            Preview URL: ${{ needs.deploy.outputs.page_url }}

            ---

            <details>
              <summary>ðŸš€ Deployment Details</summary>

              GitHub Action Run: <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">${{ github.run_id }}</a>

              Source: <a href="https://github.com/${{ github.repository }}/tree/${{github.sha}}">${{github.sha}}</a>

            </details>

        with:
          script: |
            // Check if comment already exists
            const { data: comments } = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const comment = comments.find(comment => comment.body.startsWith('# âœ… GitHub Pages Preview Ready'));

            if (comment) {
              // Update existing comment
              await github.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
                body: process.env.PR_COMMENT
              });
            } else {
              // Create new comment
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: process.env.PR_COMMENT
              });
            }

  comment-on-push:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      pull-requests: write

    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Comment on PR
        uses: actions/github-script@v4

        env:
          COMMIT_COMMENT: |
            # âœ… GitHub Pages Preview Ready

            Preview URL: ${{ needs.deploy.outputs.page_url }}

            ---

            <details>
              <summary>ðŸš€ Deployment Details</summary>

              GitHub Action Run: <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">${{ github.run_id }}</a>

              Source: <a href="https://github.com/${{ github.repository }}/tree/${{github.sha}}">${{github.sha}}</a>

            </details>

        with:
          script: |
            await github.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: process.env.COMMIT_COMMENT
            });


